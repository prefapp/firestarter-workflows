name: State repo analyze changes
on:
  workflow_call:
    inputs:
      gh_app_id:
        required: true
        type: string
    secrets:
      gh_pem_file:
        required: true
    outputs:
      changes:
        description: "The first output string"
        value: ${{ jobs.analyze_changes.outputs.changes }}
jobs:
  analyze_changes:
    runs-on: ubuntu-24.04
    outputs:
      changes: ${{ steps.analyze_changes.outputs.result }}
    steps:
      - name: Get Token from Github App
        id: get-gh-app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ inputs.gh_app_id }}
          private-key: ${{ secrets.gh_pem_file }}
          owner: ${{ github.repository_owner }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Calculate changes
        id: calculate_changes
        uses: dorny/paths-filter@v3
        with:
          list-files: json
          filters: |
            changed:
              - added|modified: '${{ apps }}/**/*.yaml'
              - added|modified: '${{ apps }}/**/*.yml'
              - added|modified: '${{ sys_services }}/**/*.yaml'
              - added|modified: '${{ sys_services }}/**/*.yml'
      - name: Analyze files changed
        id: analyze_changes
        uses: actions/github-script@v7
        with:
          script: |
            const path = require("path");
            const fs = require("fs");

            const changedFiles = JSON.parse(${{ toJson(steps.calculate_changes.outputs.changed_files) }});
            
            const ignoredDirectories = [".github", ".docs"];
            const ignoredFiles = ["helmfile.yaml"];

            const changedDeployments = new Set();

            changedFiles.forEach( f => {

              const pathComponents = path.normalize(f).split(path.sep)

              console.log(f);

              if(ignoredDirectories.includes(pathComponents[0])) return;
              if(ignoredFiles.includes(pathComponents.at(-1))) return;

              const type = pathComponents.shift()

              console.log(`Type: ${type}`)

              let cluster, tenant, app, env, file;
              if (type === "apps") {
                let [cluster, tenant, app, env, file] = pathComponents;
                let dep = [type, cluster, tenant, app, env].join("/")
                console.log(`Adding deployment: ${dep}`)
                changedDeployments.add(dep);
              } else if(type === "sys_apps") {
                let [cluster, app, file] = pathComponents;
                let dep = [type, cluster, app].join("/");
                console.log(`Adding deployment: ${dep}`)
                changedDeployments.add(dep);
              }

            });

            console.log(changedDeployments);

            let result = Array.from(changedDeployments);

            console.log(result);

            return result;
